"""
Django settings for maa_django project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os, json, sys
from pathlib import Path

from django.utils.translation import gettext_lazy as _
from django.core.exceptions import ImproperlyConfigured

from maa_django.apps.core.versioning import get_git_changeset_timestamp, get_static_version

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


with open(Path(BASE_DIR).joinpath('secrets.json'), 'r') as f:
    secrets = json.loads(f.read())

def get_secret(setting):
    """Get the secret variable or return explicit exception."""
    try:
        return secrets[setting]
    except KeyError:
        error_msg = f'Set the {setting} environment variable'
        raise ImproperlyConfigured(error_msg)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret('DJANGO_SECRET_KEY')
#'django-insecure-ugvxxupr(m51@!1_l%76-&ycc)v87_3pc)ixqf!z%69j47t-6%'
MACHINE = get_secret('MACHINE')

#TODO: trouver et affecter les url vers les bons nihoa/base-cdp
REMOTE_CDPAERO = 'http://nihoa-v27b.meteo.fr/cdp1/aerop?'
REMOTE_CDPAERO_ARCHIVE = 'http://nihoa-v27b.meteo.fr/cdp1/aerop?'
REMOTE_CDPH = 'http://nihoa-v27b.meteo.fr/cdp1/h_p?'
REMOTE_CDPH_ARCHIVE = 'http://nihoa-v27b.meteo.fr/cdp1/h_p?'
REMOTE_CDPH_OM = 'http://nihoa-v27b.meteo.fr/cdp1/om_h?'
REMOTE_CDPH_OM_ARCHIVE = 'http://nihoa-v27b.meteo.fr/cdp1/om_h?'
REMOTE_CDPQ = 'http://nihoa-v27b.meteo.fr/cdp1/q_p?'
REMOTE_CDPQ_ARCHIVE = 'http://nihoa-v27b.meteo.fr/cdp1/q_p?'
REMOTE_CDPQ_OM = 'http://nihoa-v27b.meteo.fr/cdp1/om_q?'
REMOTE_CDPQ_OM_ARCHIVE = 'http://nihoa-v27b.meteo.fr/cdp1/om_q?'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '*']


# Application definition
BASIC_AUTH_REALM = "MAAWorld"

INSTALLED_APPS = [
    'donneur',
    'analyseur',
    'configurateur',
    'producteur',
    'profiles.apps.ProfilesConfig',
    'maa_django.apps.core',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_extensions',
    #'corsheaders',
]

MIDDLEWARE = [
    #'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}
CORS_ORIGIN_WHITELIST = ( 
    'http://localhost:3000',
)


ROOT_URLCONF = 'maa_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [Path(BASE_DIR).joinpath('maa_django').joinpath('templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOCALE_PATHS = [
	Path(BASE_DIR).joinpath('locale'),
]

WSGI_APPLICATION = 'maa_django.wsgi.application'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 3000,
    }
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

LANGUAGES = (
    ('fr', _('French')),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

#timestamp = get_git_changeset_timestamp(BASE_DIR)
static_version = get_static_version(BASE_DIR)
STATIC_URL = f'/maa_django/static/'
STATIC_ROOT = Path(BASE_DIR, "maa_django/static/")

# versionnage
#STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

MEDIA_ROOT = Path(BASE_DIR).joinpath('media')
MEDIA_URL = 'maa_django/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EXTERNAL_BASE = Path(BASE_DIR).joinpath("externals")
EXTERNAL_LIBS_PATH = Path(EXTERNAL_BASE).joinpath("libs")
EXTERNAL_APPS_PATH = Path(EXTERNAL_BASE).joinpath("apps")
sys.path = ["", EXTERNAL_LIBS_PATH, EXTERNAL_APPS_PATH] + sys.path


LOGIN_URL = '/accounts/login/'
#LOGOUT_REDIRECT_URL='/web/accounts/login/'

RUNNING_SERVER = None
if 'manage.py' in sys.argv:
    if len(sys.argv)>2:
        RUNNING_SERVER = "http://" + sys.argv[2]
    else:
        RUNNING_SERVER = "http://localhost:18868/maa_django/" # Pb metwork ?
    



